<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="errorLabel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGeYUxB9wAAACBjSFJNAACH
        EAAAjBIAAP1NAACBPgAAWesAARIPAAA85gAAGc66ySIyAAABJmlDQ1BBZG9iZSBSR0IgKDE5OTgpAAAo
        z2NgYDJwdHFyZRJgYMjNKykKcndSiIiMUmA/z8DGwMwABonJxQWOAQE+IHZefl4qAwb4do2BEURf1gWZ
        xUAa4EouKCoB0n+A2CgltTiZgYHRAMjOLi8pAIozzgGyRZKywewNIHZRSJAzkH0EyOZLh7CvgNhJEPYT
        ELsI6Akg+wtIfTqYzcQBNgfClgGxS1IrQPYyOOcXVBZlpmeUKBhaWloqOKbkJ6UqBFcWl6TmFit45iXn
        FxXkFyWWpKYA1ULcBwaCEIWgENMAarTQZKAyAMUDhPU5EBy+jGJnEGIIkFxaVAZlMjIZE+YjzJgjwcDg
        v5SBgeUPQsykl4FhgQ4DA/9UhJiaIQODgD4Dw745AMDGT/0ZOjZcAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAADx0lEQVQ4T5WU3WscVRjGX201tag1MaYFa7V6U5O0TXY+dzfZ3dmZ3STbUFSqrbRqK6U1WAoqhYhW
        tCh4FUT/FW/Ui4IiivcigjeCF9Uak5k5Z3Y2+/H6nDOTD7AIPfAwc+ac9zfnvF/UK09q9Uvj1PZNEg0X
        wjNwSPrOHlF3zsjAXsF8Rdbss9K39wrfJq0FhxI8e/Y0dd2C1v8BhwG8CMPvoFCrbv8A4GW8P3p3wMBa
        FoH7OwAMw20Fm0/3D+Fb790R2C+OQ8/SwD2igA/GCzNfCs/iePoZFs0i4wfbQPUOxVNPs6hjT6v0dVK3
        R/rmFPWKBnWLJlGnVoAM2pg9fo9sul9FMIiOPsnCMzk+eggAQANnS/HkExqu1qKmy7JRutkpG7s27Cna
        sI4RRa0aRSc8ihZm3onrJmCHOP3kOg/+vs3J66c5fIRYnKiyaM1y+DBx+80LPPhnldOPlgF9Cj+xOJov
        XW9PHaHO+GGi1JumtlfYh6usKphslnhrpB1OTi9yeGAvh2P3c3L+xXwhG9IzOD4OaN2NU2dyNLUnCE41
        hhLfvCR8XAlXiCYOcvvqxdwkG6JqsZjb8SOM5PJZvVe7BMFL5pxr7ZY7rPLpDKL3o3Y6gMpP4UMEg3O5
        KfOgnTB3OvkMsPOnONwHVwRZkLRtYP+KfL0CoPM5PiT642YkWxUOR3ezfD7gQbieY5j7t/9kMV/mcP8Q
        /FrJgJt2vi1x0s+Qc/YXmLS3FlQ0sXn9sftYLMzyYG0txwH41y0d/fDAHhaLCJTauxMYACjr9jlMftIf
        1enwVxXN5MJLOQaj18W9B9l7v8/Jyyez6O/IU1TQb6isq5RU7AdQo0uxqgJsiMYPwn+vZMb5EI0Sy5Ne
        PsPo9bQf4wnkJGxiAJPAfTcNiiOUVC2lYZxsLT6GhAZ4a6jTvHaK18eGeB0+TS5tB0oNUZlG2hwGsChF
        zRmTNQeJ/ZxJ0QvQorUc1+wssT/9UPsuWXo1i6YKAPypot9+6w0eRCGnH7+vKyr2cLM580bsWRTPAJjW
        DUp9gzrVwi7ZKN+MGo6GSjg8UmWmIqmcr/2blZ5ETqq1CGuyWf6+4xV2pzWT0oqFbuMaWn2ngCR3RuJW
        +RvdHHAVDcmdngVN1TWag1pTzWG+/G3iu/t7s2gMVVOLumVMoF4RwACtq+ki8uYHAN1Ci9qG7VTgrmLt
        Bk58L4DUraC5AKb0H2CsgQb6oj0mffdtJP7PgGQN1rd/gSuuIYEfB1B39bsAWiSD0rDw3SUYrwC2gly7
        AuAogKiwOwFN+hf2c3s8+1ZGSQAAAABJRU5ErkJggg==
</value>
  </data>
</root>